{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;AA2B/C,SAAS,OAAO,CAAC,MAAM,EAAE,OAAgB;IACvC,IAAI,WAAW,GAAG;QAChB,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,QAAQ,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE;QACxC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;QACtD,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;QAChC,aAAa,EAAE,OAAO,CAAC,aAAa;QACpC,eAAe,EAAE,OAAO,CAAC,eAAe;QACxC,YAAY,EAAE,OAAO,CAAC,YAAY;KACnC,CAAC;IAEF,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAC/C,CAAC;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,MAAc;IACxC,IAAI,WAAW,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;IACrC,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAClD,CAAC;AAED,SAAS,UAAU,CAAC,MAAM,EAAE,OAAgB;IAC1C,IAAI,WAAW,GAAG;QAChB,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,QAAQ,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE;QACxC,IAAI,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;QACtD,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;QAChC,aAAa,EAAE,OAAO,CAAC,aAAa;QACpC,eAAe,EAAE,OAAO,CAAC,eAAe;QACxC,YAAY,EAAE,OAAO,CAAC,YAAY;KACnC,CAAC;IACF,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAClD,CAAC;AAED,SAAS,eAAe,CAAC,MAAM;IAC7B,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtC,CAAC;AAED,IAAM,aAAa,GAAG,UACpB,UAAsB,EACtB,aAA4B;IAE5B,IACE,aAAa,CAAC,QAAQ,KAAK,IAAI;QAC/B,OAAO,aAAa,CAAC,QAAQ,KAAK,WAAW,EAC7C;QACA,aAAa,CAAC,QAAQ,GAAG,kBAAkB,CAAC;KAC7C;IAED,IACE,aAAa,CAAC,WAAW,KAAK,IAAI;QAClC,OAAO,aAAa,CAAC,WAAW,KAAK,WAAW,EAChD;QACA,aAAa,CAAC,WAAW,GAAG,eAAe,CAAC;KAC7C;IAED,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,0BAA0B;IAE9C,IAAI,WAAW,GAAY;QACzB,QAAQ,EAAE,aAAa,CAAC,QAAQ;QAChC,KAAK,EAAE,UAAU,CAAC,KAAK;QACvB,MAAM,EAAE,UAAU,CAAC,MAAM;QACzB,CAAC,EAAE,UAAU,CAAC,CAAC;QACf,CAAC,EAAE,UAAU,CAAC,CAAC;QACf,UAAU,YAAA;QACV,WAAW,EAAE,aAAa,CAAC,WAAW;QACtC,aAAa,EAAE,aAAa,CAAC,aAAa;QAC1C,eAAe,EAAE,aAAa,CAAC,eAAe;QAC9C,YAAY,EAAE,GAAG;KAClB,CAAC;IAEF,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG;IACvB,WAAW,EAAE,UAAU,MAAqB,EAAE,aAA4B;QACxE,IAAI,MAAM,IAAI,IAAI,EAAE;YAClB,OAAO,CAAC,CAAC,CAAC;SACX;QAED,IAAI,UAAU,GAAe;YAC3B,KAAK,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC1B,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAC3B,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;SACL,CAAC;QAEF,IAAI,aAAa,GAAG,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAC7D,OAAO,OAAO,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,aAAa,CAAC,CAAC;IAChE,CAAC;IACD,OAAO,EAAE,UACP,MAAqB,EACrB,UAAsB,EACtB,aAA4B;QAE5B,IAAI,aAAa,GAAY,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QACtE,OAAO,OAAO,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,aAAa,CAAC,CAAC;IAChE,CAAC;IACD,UAAU,EAAE,UACV,MAAqB,EACrB,UAAsB,EACtB,aAA4B;QAE5B,IAAI,aAAa,GAAY,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QACtE,OAAO,UAAU,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,aAAa,CAAC,CAAC;IACnE,CAAC;IACD,UAAU,EAAE,UAAU,MAAqB,EAAE,MAAc;QACzD,OAAO,UAAU,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,MAAM,CAAC,CAAC;IAC5D,CAAC;IACD,eAAe,EAAE,UAAU,MAAqB;QAC9C,OAAO,eAAe,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,CAAC;IACzD,CAAC;CACF,CAAC;AAEF,kBAAe,gBAAgB,CAAC","sourcesContent":["var Vibrancy = require(\"bindings\")(\"Vibrancy\");\nimport { BrowserWindow } from \"electron\";\n\ninterface Dimensions {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\ninterface EffectOptions {\n  material?: string;\n  resizeMask?: number;\n  viewId?: number;\n  effectState?: string;\n  cornerRadius?: number;\n  maskImagePath?: string;\n  maskImageInsets?: {\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n  };\n}\n\ntype Options = Dimensions & EffectOptions;\n\nfunction AddView(buffer, options: Options) {\n  var viewOptions = {\n    Material: options.material,\n    Position: { x: options.x, y: options.y },\n    Size: { width: options.width, height: options.height },\n    ResizeMask: options.resizeMask,\n    EffectState: options.effectState,\n    MaskImagePath: options.maskImagePath,\n    MaskImageInsets: options.maskImageInsets,\n    CornerRadius: options.cornerRadius,\n  };\n\n  return Vibrancy.AddView(buffer, viewOptions);\n}\n\nfunction RemoveView(buffer, viewId: number) {\n  var viewOptions = { ViewId: viewId };\n  return Vibrancy.RemoveView(buffer, viewOptions);\n}\n\nfunction UpdateView(buffer, options: Options) {\n  var viewOptions = {\n    ViewId: options.viewId,\n    Material: options.material,\n    Position: { x: options.x, y: options.y },\n    Size: { width: options.width, height: options.height },\n    ResizeMask: options.resizeMask,\n    EffectState: options.effectState,\n    MaskImagePath: options.maskImagePath,\n    MaskImageInsets: options.maskImageInsets,\n    CornerRadius: options.cornerRadius,\n  };\n  return Vibrancy.UpdateView(buffer, viewOptions);\n}\n\nfunction DisableVibrancy(buffer) {\n  Vibrancy.SetVibrancy(false, buffer);\n}\n\nconst assignOptions = (\n  dimensions: Dimensions,\n  effectOptions: EffectOptions\n): Options => {\n  if (\n    effectOptions.material === null ||\n    typeof effectOptions.material === \"undefined\"\n  ) {\n    effectOptions.material = \"appearance-based\";\n  }\n\n  if (\n    effectOptions.effectState === null ||\n    typeof effectOptions.effectState === \"undefined\"\n  ) {\n    effectOptions.effectState = \"follow-window\";\n  }\n\n  var resizeMask = 2; //auto resize on both axis\n\n  var viewOptions: Options = {\n    material: effectOptions.material,\n    width: dimensions.width,\n    height: dimensions.height,\n    x: dimensions.x,\n    y: dimensions.y,\n    resizeMask,\n    effectState: effectOptions.effectState,\n    maskImagePath: effectOptions.maskImagePath,\n    maskImageInsets: effectOptions.maskImageInsets,\n    cornerRadius: 0.0,\n  };\n\n  return viewOptions;\n};\n\nconst electronVibrancy = {\n  setVibrancy: function (window: BrowserWindow, effectOptions: EffectOptions) {\n    if (window == null) {\n      return -1;\n    }\n\n    let dimensions: Dimensions = {\n      width: window.getSize()[0],\n      height: window.getSize()[1],\n      x: 0,\n      y: 0,\n    };\n\n    let nativeOptions = assignOptions(dimensions, effectOptions);\n    return AddView(window.getNativeWindowHandle(), nativeOptions);\n  },\n  addView: function (\n    window: BrowserWindow,\n    dimensions: Dimensions,\n    effectOptions: EffectOptions\n  ) {\n    var nativeOptions: Options = assignOptions(dimensions, effectOptions);\n    return AddView(window.getNativeWindowHandle(), nativeOptions);\n  },\n  updateView: function (\n    window: BrowserWindow,\n    dimensions: Dimensions,\n    effectOptions: EffectOptions\n  ) {\n    var nativeOptions: Options = assignOptions(dimensions, effectOptions);\n    return UpdateView(window.getNativeWindowHandle(), nativeOptions);\n  },\n  removeView: function (window: BrowserWindow, viewId: number) {\n    return RemoveView(window.getNativeWindowHandle(), viewId);\n  },\n  disableVibrancy: function (window: BrowserWindow) {\n    return DisableVibrancy(window.getNativeWindowHandle());\n  },\n};\n\nexport default electronVibrancy;\n"]}